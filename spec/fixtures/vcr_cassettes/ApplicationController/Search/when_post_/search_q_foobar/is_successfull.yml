---
http_interactions:
- request:
    method: get
    uri: http://content.guardianapis.com/search?api-key=eaa6272a-36ea-4867-93c3-cbd815378030&format=json&order-by=newest&page-size=200&q=foobar&show-fields=all
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=0
      - no-cache="set-cookie"
      Content-Type:
      - application/json
      Date:
      - Wed, 26 Jan 2022 11:39:04 GMT
      Server:
      - Concierge
      Set-Cookie:
      - AWSELB=75B9BD811C5C032EDEF76366759629DCCB8726D7A371904BEC1C3B7DFC40019571E370E2C4E4519DDF3CD336789F71716B110728D8EAB4FFE7401F30806EFFF8FCB8FE75D3;PATH=/;MAX-AGE=86400
      Via:
      - kong/0.14.0
      X-Kong-Proxy-Latency:
      - '1'
      X-Kong-Upstream-Latency:
      - '16'
      X-Ratelimit-Limit-Day:
      - '5000'
      X-Ratelimit-Limit-Minute:
      - '720'
      X-Ratelimit-Remaining-Day:
      - '4862'
      X-Ratelimit-Remaining-Minute:
      - '719'
      Content-Length:
      - '11105'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Jan 2022 11:39:04 GMT
recorded_with: VCR 6.0.0
